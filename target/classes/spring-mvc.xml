<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    
    xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        
                        http://www.springframework.org/schema/tx 
    					http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    					http://www.springframework.org/schema/aop
    					http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                          
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">  
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器   --> 
    <context:component-scan base-package="com.cn.yd.controller" /> 
    
    
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->  
    <bean id="mappingJacksonHttpMessageConverter"  
        class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/html;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean>  
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->  
    <bean  
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                <ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->  
            </list>  
        </property>  
    </bean>  
    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->  
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->  
        <property name="prefix" value="/WEB-INF/jsp/" />  
        <property name="suffix" value=".jsp" />  
    </bean>  
      
      
    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->  
    <bean id="multipartResolver"    
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        <!-- 默认编码 -->  
        <property name="defaultEncoding" value="utf-8" />    
        <!-- 文件大小最大值 -->  
        <property name="maxUploadSize" value="10485760000" />    
        <!-- 内存中的最大值 -->  
        <property name="maxInMemorySize" value="40960" />    
    </bean>   
    
    
    <!-- 对静态资源文件的访问-->
    <!-- 
    <mvc:resources mapping="/web/res/angular/**"  location="/web/res/angular/"/> 
    <mvc:resources mapping="/web/res/audition/**"  location="/web/res/audition/" />
    <mvc:resources mapping="/web/res/bootstrap/**"  location="/web/res/bootstrap/" />
    <mvc:resources mapping="/web/res/bootstrap-table/**"  location="/web/res/bootstrap-table/" />
    <mvc:resources mapping="/web/res/controller/**"  location="/web/res/controller/" />
    <mvc:resources mapping="/web/res/editor/**"  location="/web/res/editor/" />
    <mvc:resources mapping="/web/res/fileupload/**"  location="/web/res/fileupload/" />
    <mvc:resources mapping="/web/res/highcharts/**"  location="/web/res/highcharts/" />
    <mvc:resources mapping="/web/res/jbox/**"  location="/web/res/jbox/" />
    <mvc:resources mapping="/web/res/jcrop/**"  location="/web/res/jcrop/" />
    <mvc:resources mapping="/web/res/jquery/**"  location="/web/res/jquery/" />
    <mvc:resources mapping="/web/res/js/**"  location="/web/res/js/" />
    <mvc:resources mapping="/web/res/my97/**"  location="/web/res/my97/" />
    <mvc:resources mapping="/web/res/style/**"  location="/web/res/style/" />
    <mvc:resources mapping="/web/res/ztree/**"  location="/web/res/ztree/" />
     -->

    <!-- <mvc:resources mapping="/favicon.ico"  location="favicon.ico" />  -->
    
    <!--配置拦截器, 多个拦截器,顺序执行 -->
    <mvc:interceptors> 
           <mvc:interceptor>
                   <!--  
                       /**的意思是所有文件夹及里面的子文件夹 
                       /*是所有文件夹，不含子文件夹 
                       /是web项目的根目录
                     --> 
                   <mvc:mapping path="/**" />                    
                   
                   <!-- 需排除拦截的地址 -->  
                    <mvc:exclude-mapping path="/login"/>  
                    <mvc:exclude-mapping path="/checkLoginUser"/> 
                      
                    <!-- <mvc:exclude-mapping path="/js/**"/> -->
                    
                   <bean id="SessionInterceptor" class="com.cn.yd.util.interceptor.SessionInterceptor"></bean> <!--这个类就是我们自定义的Interceptor -->
          </mvc:interceptor> 
          <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法  -->
    </mvc:interceptors>
 	
 	<!-- 默认的注解映射的支持 -->  
	<mvc:annotation-driven /> 
  
</beans>  